stages:
  # - test
  - publish
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

# test:
#   image: gradle:jdk17
#   stage: test
#   script:
#     - ./gradlew check
#   artifacts:
#     when: always
#     reports:
#       junit: build/test-results/test/**/TEST-*.xml

publish:
  image: docker:24.0.4
  stage: publish
  services:
    - docker:24.0.4-dind
  before_script:
    - echo "$FCM_KEY" > ./src/main/resources/fcm-key.json
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - cat ./src/main/resources/fcm-key.json
    - docker pull $TAG_LATEST || true
    - docker build --cache-from $TAG_LATEST -t $TAG_LATEST -t $TAG_COMMIT .
    - docker push $TAG_LATEST
    - docker push $TAG_COMMIT

deploy:
  image: docker:24.0.4
  stage: deploy
  services:
    - docker:24.0.4-dind
  tags: 
    - deployment
  before_script:
    - docker --version
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker rmi $TAG_LATEST
    - docker pull $TAG_LATEST
  script:
    - docker run --name $CI_PROJECT_NAME -d
      -p 8080:8080 --restart unless-stopped
      -v /home/deployer/logs:/app/logs
      -e DATABASE_URI=$DATABASE_URI
      -e DATABASE_USERNAME=$DATABASE_USERNAME
      -e DATABASE_PASSWORD=$DATABASE_PASSWORD
      -e S3_BUCKET_NAME=$S3_BUCKET_NAME
      -e S3_REGION=$S3_REGION
      -e S3_ACCESS_KEY=$S3_ACCESS_KEY
      -e S3_SECRET_KEY=$S3_SECRET_KEY
      -e EMAIL=$EMAIL_USER
      -e EMAIL_PASSWORD=$EMAIL_PASSWORD
      -e REDIS_HOST=$SERVER_IP
      -e REDIS_PORT=6379
      -e REDIS_PASSWORD=$REDIS_PASSWORD
      -e WEB_CLIENT_BASE_URL=$WEB_CLIENT_BASE_URL
      -e TZ=Asia/Seoul
      $TAG_LATEST
  environment:
    name: production
    url: http://$SERVER_IP
  only:
    - main
