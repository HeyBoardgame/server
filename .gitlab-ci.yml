stages:
  - publish
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

publish:
  image: docker:24.0.4
  stage: publish
  services:
    - docker:24.0.4-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $TAG_LATEST || true
    - docker build --cache-from $TAG_LATEST -t $TAG_LATEST -t $TAG_COMMIT .
    - docker push $TAG_LATEST
    - docker push $TAG_COMMIT

deploy:
  image: docker:24.0.4
  stage: deploy
  services:
    - docker:24.0.4-dind
  tags: 
    - deployment
  before_script:
    - docker --version
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker stop $CI_PROJECT_NAME || true
    - docker rm $CI_PROJECT_NAME || true
    - docker rmi $TAG_LATEST
    - docker pull $TAG_LATEST
  script:
    - docker run --name $CI_PROJECT_NAME -d
      -p 8080:8080 --restart unless-stopped
      -e DATABASE_URI=$DATABASE_URI
      -e DATABASE_USERNAME=$DATABASE_USERNAME
      -e DATABASE_PASSWORD=$DATABASE_PASSWORD
      -e EMAIL=$EMAIL_USER
      -e EMAIL_PASSWORD=$EMAIL_PASSWORD
      -e REDIS_HOST=$SERVER_IP
      -e REDIS_PORT=6379
      -e JWT_SIGN_KEY=$JWT_SIGN_KEY
      $TAG_LATEST
  environment:
    name: production
    url: http://$SERVER_IP
  only:
    - main